<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="Person"/>
<fullyQualifiedTypeName name="java.util.regex.Pattern"/>
<fullyQualifiedTypeName name="cogent.Person"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="gl.itp.hyd65.cs65.Royce.Advisor"/>
<fullyQualifiedTypeName name="esg.itp.shape.Rectangle"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
<fullyQualifiedTypeName name="java.lang.NumberFormatException"/>
<fullyQualifiedTypeName name="exceptions.InvalidAgeException"/>
<fullyQualifiedTypeName name="exceptions_calc.UserDefinedExceptions.NegativeAmountException"/>
<fullyQualifiedTypeName name="employee.InvalidDesignationException"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
<fullyQualifiedTypeName name="java.nio.file.Files"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.FileOutputStream"/>
<fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
<fullyQualifiedTypeName name="java.io.FileInputStream"/>
<fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="serialization.CustomBlankFieldException"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="java.io.EOFException"/>
</qualifiedTypeNameHistroy>
